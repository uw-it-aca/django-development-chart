apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ .Values.repo }}-dev-{{ .Values.branch }}
  labels:
    app.kubernetes.io/name: {{ .Values.repo }}-dev-{{ .Values.branch }}
    helm.sh/chart: {{ include "dev-helm.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.repo }}-dev-{{ .Values.branch }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.repo }}-dev-{{ .Values.branch }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Values.repo }}-dev-{{ .Values.branch }}
          image: "{{ .Values.aws_account | replace ":" "" }}.dkr.ecr.us-west-2.amazonaws.com/{{ .Values.repo }}-provisioner-web-ecr:{{ .Values.branch }}"
          imagePullPolicy: "Always"
          env:
            - name: DB
              value: "mysql"
            - name: BRANCH
              value: "{{ .Values.branch }}"
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rds
                  key: username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rds
                  key: password
            - name: DATABASE_DB_NAME
              value: "{{ .Values.branch | replace "-" "_" }}"
            - name: DATABASE_HOSTNAME
              value: "rds.default.svc.cluster.local"
            - name: ENV
              value: "dev"
            - name: PORT
              value: "8080"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
{{ toYaml .Values.resources | indent 12 }}
